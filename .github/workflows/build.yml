name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        rust: [stable]

    steps:
      - name: Increase resource limits
        run: |
          sudo sysctl -w vm.max_map_count=262144
          ulimit -n 4096

      - name: Enable swap memory
        run: |
          sudo fallocate -l 2G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      # - name: Install SQLite3
      #   run: |
      #     if [[ "$OSTYPE" == "linux-gnu"* ]]; then
      #       sudo apt-get update -y
      #       sudo apt-get install -y sqlite3 libsqlite3-dev
      #     elif [[ "$OSTYPE" == "darwin"* ]]; then
      #       brew install sqlite3
      #     elif [[ "$OSTYPE" == "msys" ]]; then
      #       choco install sqlite
      #     else
      #       echo "Unsupported platform: $OSTYPE"
      #       exit 1
      #     fi

      - name: Build project
        run: RUST_BACKTRACE=1 cargo build --release

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/krapi
          asset_name: krapi
          asset_content_type: application/octet-stream
